from django.db import models
from django import forms
from django.conf import settings
from django.core.validators import MaxValueValidator, MinValueValidator

class Summary_Of_Results_Model(models.Model):
    name = models.CharField(max_length=20, null=True, blank=True,unique=True)
    number = models.IntegerField(default=0, null=True, blank=True,validators=[MinValueValidator(0)])
    start_month = models.IntegerField(default=1, null=True, blank=True,validators=[MinValueValidator(1),MaxValueValidator(12)])
    start_year = models.IntegerField(default=1300, null=True, blank=True,validators=[MinValueValidator(1300),MaxValueValidator(1400)])
    job = models.CharField(max_length=30, null=True, blank=True)
    examinations_code=models.CharField(max_length=20, null=True, blank=True)
    job_code = models.CharField( null=True, blank=True,max_length=30)
    gender_CHOICES = [('mard', 'مرد'), ('zan', 'زن')]
    gender = models.CharField(default='mard', choices=gender_CHOICES, null=True, max_length=20)
    harmful_factors = models.CharField(max_length=100, null=True, blank=True)
    CODE_CHOICES = [(1, '1'), (2, '2'), (3, '3')]
    code = models.IntegerField(default=1, choices=CODE_CHOICES, null=True, blank=True)
    age = models.IntegerField(default=1300, null=True, blank=True,validators=[MinValueValidator(1300),MaxValueValidator(1400)])
    length = models.IntegerField(default=100, null=True, blank=True,validators=[MinValueValidator(100),MaxValueValidator(300)])
    weight = models.IntegerField(default=20, null=True, blank=True,validators=[MinValueValidator(20),MaxValueValidator(200)])
    body_mass = models.CharField(max_length=300, null=True, blank=True)
    body_mass_status = models.CharField(max_length=300, null=True, blank=True)
    blood_sugar = models.IntegerField(default=50, null=True, blank=True,validators=[MinValueValidator(50),MaxValueValidator(500)])
    blood_sugar_status = models.CharField(max_length=300, null=True, blank=True)
    blood_pressure = models.IntegerField(default=5, null=True, blank=True,validators=[MinValueValidator(5),MaxValueValidator(20)])
    blood_pressure_status = models.CharField(max_length=300, null=True, blank=True)
    cholesterol = models.IntegerField(default=50, null=True, blank=True,validators=[MinValueValidator(50),MaxValueValidator(1000)])
    cholesterol_status = models.CharField(max_length=300, null=True, blank=True)
    triglyceride = models.IntegerField(default=20, null=True, blank=True,validators=[MinValueValidator(20),MaxValueValidator(2000)])
    triglyceride_status = models.CharField(max_length=300, null=True, blank=True)
    URINE_CHOICES = [('null', ''), ('normal', 'نرمال'), ('not_normal', 'غیر نرمال'), ('none', 'ندارد')]
    urine = models.CharField(choices=URINE_CHOICES, max_length=300, default='null', null=True, blank=True)
    breathing_CHOICES = [('null', ''), ('normal', 'نرمال'), ('tahdidi', 'تحدیدی'), ('ensedadi', 'انسدادی'),
                         ('try', 'نیاز به تکرار'), ('namaie_toaman', 'نمای توامان تحدیدی وانسدادی'),
                         ('none', 'ندارد')]
    breathing_test = models.CharField(choices=breathing_CHOICES, max_length=300, default='null', null=True, blank=True)
    left_ear_CHOICES = [('null', ''), ('normal', 'نرمال'), ('kahesh_shenavai_hedayati', 'کاهش شنوایی هدایتی'),
                        ('kahesh_shenavai_hesi_asabi', 'کاهش شنوایی حسی عصبی'),
                        ('kahesh_shenavai_nashi_az_seda', 'کاهش شنوایی ناشی از صدا'),
                        ('toaman_hedayati_va_hesi_asabi', 'توامان هدایتی و حسی عصبی'), ('none', 'ندارد')]
    left_ear_hearing = models.CharField(choices=left_ear_CHOICES, max_length=300, default='null', null=True, blank=True)
    right_ear_CHOICES = [('null', ''), ('normal', 'نرمال'), ('kahesh_shenavai_hedayati', 'کاهش شنوایی هدایتی'),
                        ('kahesh_shenavai_hesi_asabi', 'کاهش شنوایی حسی عصبی'),
                        ('kahesh_shenavai_nashi_az_seda', 'کاهش شنوایی ناشی از صدا'),
                        ('toaman_hedayati_va_hesi_asabi', 'توامان هدایتی و حسی عصبی'), ('none', 'ندارد')]
    right_ear_hearing = models.CharField(choices=right_ear_CHOICES, max_length=300, default='null', null=True, blank=True)
    left_eye_vision = models.IntegerField(default=1, null=True, blank=True,validators=[MinValueValidator(1),MaxValueValidator(12)])
    left_eye_vision_status = models.CharField(max_length=300, null=True, blank=True)
    left_eye_vision_with_glasses = models.IntegerField(default=1, null=True, blank=True,validators=[MinValueValidator(1),MaxValueValidator(12)])
    right_eye_vision = models.IntegerField(default=1, null=True, blank=True,validators=[MinValueValidator(1),MaxValueValidator(12)])
    right_eye_vision_status = models.CharField(max_length=300, null=True, blank=True)
    right_eye_vision_with_glasses = models.IntegerField(default=1, null=True, blank=True,validators=[MinValueValidator(1),MaxValueValidator(12)])
    color_CHOICES = [('null', ''), ('normal', 'نرمال'), ('not_normal', 'غیر نرمال'), ('tashkhis_rang_ghermez', 'تشخیص رنگ قرمز'),
                     ('none', 'ندارد')]
    color_vision = models.CharField(choices=color_CHOICES, max_length=300, default='null', null=True, blank=True)
    field_CHOICES = [('null', ''), ('normal', 'نرمال'), ('not_normal', 'غیر نرمال'), ('none', 'ندارد')]
    field_of_veiw = models.CharField(choices=field_CHOICES, max_length=300, default='null', null=True, blank=True)
    depth_CHOICES = [('null', ''), ('normal', 'نرمال'), ('not_normal', 'غیر نرمال'), ('none', 'ندارد')]
    depth_vision = models.CharField(choices=depth_CHOICES, max_length=300, default='null', null=True, blank=True)
    breast_CHOICES = [('null', ''), ('normal', 'نرمال'), ('not_normal', 'غیر نرمال'), ('none', 'ندارد')]
    breast_photo = models.CharField(choices=breast_CHOICES, max_length=300, default='null', null=True, blank=True)
    heart_CHOICES = [('null', ''), ('normal', 'نرمال'), ('taghirat_gheir_ekhtesasi', 'تغییرات غیر اختصاصی'),
                     ('try', 'نیاز به تکرار'), ('not_normal', 'غیر نرمال'), ('none', 'ندارد')]
    heart = models.CharField(choices=heart_CHOICES, max_length=300, default='null', null=True, blank=True)
    blood_lead = models.IntegerField(default=0, null=True, blank=True,validators=[MinValueValidator(0),MaxValueValidator(50)])
    blood_lead_status = models.CharField(max_length=300, null=True, blank=True)
    chratinin = models.IntegerField(default=0, null=True, blank=True,validators=[MinValueValidator(0),MaxValueValidator(5)])
    PSA = models.IntegerField(default=0, null=True, blank=True,validators=[MinValueValidator(0),MaxValueValidator(20)])
    PSA_status = models.CharField(max_length=300, null=True, blank=True)
    D3 = models.IntegerField(default=0, null=True, blank=True,validators=[MinValueValidator(0),MaxValueValidator(5)])
    TSH = models.IntegerField(default=0, null=True, blank=True,validators=[MinValueValidator(0),MaxValueValidator(5)])
    TSH_status = models.CharField(max_length=300, null=True, blank=True)
    problem = models.CharField(max_length=300, null=True, blank=True)
    problem_CHOICES = [('null', ''), ('darad', 'دارد'), ('none', 'ندارد')]
    problems_with_the_persons_job = models.CharField(choices=problem_CHOICES, max_length=300, default='null', null=True,blank=True)
    recommendations = models.CharField(max_length=300, null=True, blank=True)
    refer_CHOICES = [('null', ''), ('none', 'ندارد'), ('ghalb_orogh', 'قلب و عروق'), ('dakheli', 'داخلی'), ('rie', 'ریه'),
                     ('ghodad', 'غدد'), ('saier', 'سایر')]
    refer_to_specialist = models.CharField(choices=refer_CHOICES, max_length=300, default='null', null=True, blank=True)
    final_CHOICES = [('null', ''), ('belamane', 'بلامانع'), ('taghir_shekl', 'تغییر شغل'), ('mashrot', 'مشروط'),
                     ('comision', 'کمیسیون')]
    final_theory = models.CharField(choices=final_CHOICES, max_length=300, default='null', null=True, blank=True)
    reson_for_opening_the_case = models.CharField(max_length=300, null=True, blank=True)
    occupational_CHOICES = [('null', ''), ('darhal_peygiri', 'درحال پیگیری'), ('done', 'انجام شده'),
                            ('not_done', 'انجام نشده')]
    occupational_actions = models.CharField(choices=occupational_CHOICES, max_length=300, default='null', null=True,
                                            blank=True)
    occupational_disease_code = models.CharField(max_length=300, null=True, blank=True)
    AST = models.IntegerField(default=0, null=True, blank=True,validators=[MinValueValidator(0),MaxValueValidator(20)])
    AST_status = models.CharField(max_length=300, null=True, blank=True)
    ALT = models.IntegerField(default=0, null=True, blank=True,validators=[MinValueValidator(0),MaxValueValidator(20)])
    ALT_status = models.CharField(max_length=300, null=True, blank=True)
    age_two = models.IntegerField(default=0, null=True, blank=True)
    duration_of_employment = models.CharField(max_length=300, null=True, blank=True)
    overweight = models.CharField(max_length=300, null=True, blank=True)




class Submit_Company_Model(models.Model):
    company = models.CharField(max_length=20, null=True, blank=True)
    doctor = models.CharField(max_length=20, null=True, blank=True)
    date = models.CharField(max_length=20, null=True, blank=True)
    employer = models.CharField(max_length=20, null=True, blank=True)
    examinations_code=models.CharField(max_length=20, null=True, blank=True)


class Disease_Model(models.Model):
    examinations_code=models.CharField(max_length=20, null=True, blank=True)
    order_CHOICES = [(1, '1'), (10, '10'), (20, '20'), (30, '30'), (40, '40'), (50, '50')]
    order_number = models.IntegerField(default=1, choices=order_CHOICES, null=True, blank=True)


class Personal_Species_Model(models.Model):
    examinations_type= models.CharField(max_length=20, null=True, blank=True,unique=True)
    date_year=models.IntegerField(default=0, null=True, blank=True)
    date_month=models.IntegerField(default=0, null=True, blank=True)
    date_day=models.IntegerField(default=0, null=True, blank=True)
    profil_number=models.IntegerField(default=0, null=True, blank=True)
    employment_number=models.IntegerField(default=0, null=True, blank=True)
    name = models.CharField(max_length=20, null=True, blank=True,unique=True)
    fathers_name = models.CharField(max_length=20, null=True, blank=True)
    gender_CHOICES = [('mard', 'مرد'), ('zan', 'زن')]
    gender = models.CharField(default='mard', choices=gender_CHOICES, null=True, blank=True, max_length=20)
    marriage_status_CHOICES = [('mojarad', 'مجرد'), ('motahel', 'متاحل')]
    marriage_status = models.CharField(default='mojarad', choices=marriage_status_CHOICES, null=True, blank=True, max_length=20)
    children = models.IntegerField(default=0, null=True, blank=True)
    age = models.IntegerField(default=1300, null=True, blank=True,validators=[MinValueValidator(1300),MaxValueValidator(1400)])
    personal_code = models.IntegerField(default=0, null=True, blank=True)
    military_status_CHOICES = [('khedmat_karde', 'خدمت کرده'), ('moaf', 'معاف')]
    military_status = models.CharField(default='khedmat_karde', choices=military_status_CHOICES, null=True, blank=True, max_length=20)
    raste = models.CharField(max_length=20, null=True, blank=True)
    medical_exemption = models.BooleanField(default=False)
    medical_exemption_reason = models.CharField(max_length=20, null=True, blank=True)
    job_name = models.CharField(max_length=20, null=True, blank=True)
    employer_name = models.CharField(max_length=20, null=True, blank=True)
    address = models.CharField(max_length=50, null=True, blank=True)


class Job_History_Model(models.Model):
    current_job = models.CharField(max_length=50, null=True, blank=True)
    current_job_duty = models.CharField(max_length=50, null=True, blank=True)
    current_job_from = models.CharField(max_length=50, null=True, blank=True)
    current_job_to = models.CharField(max_length=50, null=True, blank=True)
    current_job_reason = models.CharField(max_length=50, null=True, blank=True)
    second_current_job = models.CharField(max_length=50, null=True, blank=True)
    second_current_job_duty = models.CharField(max_length=50, null=True, blank=True)
    second_current_job_from = models.CharField(max_length=50, null=True, blank=True)
    second_current_job_to = models.CharField(max_length=50, null=True, blank=True)
    second_current_job_reason = models.CharField(max_length=50, null=True, blank=True)
    previous_job = models.CharField(max_length=50, null=True, blank=True)
    previous_job_duty = models.CharField(max_length=50, null=True, blank=True)
    previous_job_from = models.CharField(max_length=50, null=True, blank=True)
    previous_job_to = models.CharField(max_length=50, null=True, blank=True)
    previous_job_reason = models.CharField(max_length=50, null=True, blank=True)
    second_previous_job = models.CharField(max_length=50, null=True, blank=True)
    second_previous_job_duty = models.CharField(max_length=50, null=True, blank=True)
    second_previous_job_from = models.CharField(max_length=50, null=True, blank=True)
    second_previous_job_to = models.CharField(max_length=50, null=True, blank=True)
    second_previous_job_reason = models.CharField(max_length=50, null=True, blank=True)

class Assessment_Model(models.Model):
    current_ph_noise = models.BooleanField(default=False)
    current_ph_erteash = models.BooleanField(default=False)
    current_ph_not_unizan = models.BooleanField(default=False)
    current_ph_unizan = models.BooleanField(default=False)
    current_ph_stress = models.BooleanField(default=False)
    current_ph_other = models.BooleanField(default=False)
    current_sh_dust = models.BooleanField(default=False)
    current_sh_metals = models.BooleanField(default=False)
    current_sh_halal = models.BooleanField(default=False)
    current_sh_afat = models.BooleanField(default=False)
    current_sh_asidvbaz = models.BooleanField(default=False)
    current_sh_gaz = models.BooleanField(default=False)
    current_bio_gazesh = models.BooleanField(default=False)
    current_bio_bactery = models.BooleanField(default=False)
    current_bio_virus = models.BooleanField(default=False)
    current_bio_angal = models.BooleanField(default=False)
    current_bio_other = models.BooleanField(default=False)
    current_er_standvsit = models.BooleanField(default=False)
    current_er_loop = models.BooleanField(default=False)
    current_er_hamlvnaghl = models.BooleanField(default=False)
    current_er_vaziat_namonaseb = models.BooleanField(default=False)
    current_er_other = models.BooleanField(default=False)
    current_rav_order = models.BooleanField(default=False)
    current_rav_stressor = models.BooleanField(default=False)
    current_rav_other = models.BooleanField(default=False)
    previous_ph_noise = models.BooleanField(default=False)
    previous_ph_erteash = models.BooleanField(default=False)
    previous_ph_not_unizan = models.BooleanField(default=False)
    previous_ph_unizan = models.BooleanField(default=False)
    previous_ph_stress = models.BooleanField(default=False)
    previous_ph_other = models.BooleanField(default=False)
    previous_sh_dust = models.BooleanField(default=False)
    previous_sh_metals = models.BooleanField(default=False)
    previous_sh_halal = models.BooleanField(default=False)
    previous_sh_afat = models.BooleanField(default=False)
    previous_sh_asidvbaz = models.BooleanField(default=False)
    previous_sh_gaz = models.BooleanField(default=False)
    previous_bio_gazesh = models.BooleanField(default=False)
    previous_bio_bactery = models.BooleanField(default=False)
    previous_bio_virus = models.BooleanField(default=False)
    previous_bio_angal = models.BooleanField(default=False)
    previous_bio_other = models.BooleanField(default=False)
    previous_er_standvsit = models.BooleanField(default=False)
    previous_er_loop = models.BooleanField(default=False)
    previous_er_hamlvnaghl = models.BooleanField(default=False)
    previous_er_vaziat_namonaseb = models.BooleanField(default=False)
    previous_er_other = models.BooleanField(default=False)
    previous_rav_order = models.BooleanField(default=False)
    previous_rav_stressor = models.BooleanField(default=False)
    previous_rav_other = models.BooleanField(default=False)   
    required_description = models.CharField(max_length=50, null=True, blank=True)
    kar_shenas = models.CharField(max_length=50, null=True, blank=True)
    kar_shenas_name = models.CharField(max_length=50, null=True, blank=True)
    date_year=models.IntegerField(default=0, null=True, blank=True)
    date_month=models.IntegerField(default=0, null=True, blank=True)
    date_day=models.IntegerField(default=0, null=True, blank=True)

class Personal_History_Model(models.Model):
    first_y = models.BooleanField(default=False)  
    first_n = models.BooleanField(default=False) 
    first_des = models.CharField(max_length=50, null=True, blank=True)
    second_y = models.BooleanField(default=False)  
    second_n = models.BooleanField(default=False) 
    second_des = models.CharField(max_length=50, null=True, blank=True)
    third_y = models.BooleanField(default=False)  
    third_n = models.BooleanField(default=False) 
    third_des = models.CharField(max_length=50, null=True, blank=True)
    fourth_y = models.BooleanField(default=False)  
    fourth_n = models.BooleanField(default=False) 
    fourth_des = models.CharField(max_length=50, null=True, blank=True)
    fifth_y = models.BooleanField(default=False)  
    fifth_n = models.BooleanField(default=False) 
    fifth_des = models.CharField(max_length=50, null=True, blank=True)
    sixth_y = models.BooleanField(default=False)  
    sixth_n = models.BooleanField(default=False) 
    sixth_des = models.CharField(max_length=50, null=True, blank=True)
    seventh_y = models.BooleanField(default=False)  
    seventh_n = models.BooleanField(default=False) 
    seventh_des = models.CharField(max_length=50, null=True, blank=True)
    eighth_y = models.BooleanField(default=False)  
    eighth_n = models.BooleanField(default=False) 
    eighth_des = models.CharField(max_length=50, null=True, blank=True)
    ninth_y = models.BooleanField(default=False)  
    ninth_n = models.BooleanField(default=False) 
    ninth_des = models.CharField(max_length=50, null=True, blank=True)
    tenth_y = models.BooleanField(default=False)  
    tenth_n = models.BooleanField(default=False) 
    tenth_des_number = models.CharField(max_length=50, null=True, blank=True)
    tenth_des_duration = models.CharField(max_length=50, null=True, blank=True)
    eleventh_y = models.BooleanField(default=False)  
    eleventh_n = models.BooleanField(default=False) 
    eleventh_des_number = models.CharField(max_length=50, null=True, blank=True)
    eleventh_des_duration = models.CharField(max_length=50, null=True, blank=True)
    twelfth_y = models.BooleanField(default=False)  
    twelfth_n = models.BooleanField(default=False) 
    twelfth_des = models.CharField(max_length=50, null=True, blank=True)
    thirteenth_y = models.BooleanField(default=False)  
    thirteenth_n = models.BooleanField(default=False) 
    thirteenth_des_type = models.CharField(max_length=50, null=True, blank=True)
    thirteenth_des_reason = models.CharField(max_length=50, null=True, blank=True)
    fourteenth_y = models.BooleanField(default=False)  
    fourteenth_n = models.BooleanField(default=False) 
    fourteenth_des = models.CharField(max_length=50, null=True, blank=True)
    fifteenth_y = models.BooleanField(default=False)  
    fifteenth_n = models.BooleanField(default=False) 
    fifteenth_des = models.CharField(max_length=50, null=True, blank=True)
    sixteenth_y = models.BooleanField(default=False)  
    sixteenth_n = models.BooleanField(default=False) 
    sixteenth_des = models.CharField(max_length=50, null=True, blank=True)
    

class Examinations_Model(models.Model):
    date_year=models.IntegerField(default=0, null=True, blank=True)
    date_month=models.IntegerField(default=0, null=True, blank=True)
    date_day=models.IntegerField(default=0, null=True, blank=True)
    weight = models.IntegerField(default=20, null=True, blank=True,validators=[MinValueValidator(20),MaxValueValidator(200)])
    blood_pressure = models.IntegerField(default=5, null=True, blank=True,validators=[MinValueValidator(5),MaxValueValidator(20)])
    length = models.IntegerField(default=100, null=True, blank=True,validators=[MinValueValidator(100),MaxValueValidator(300)])
    pulse = models.IntegerField(default=0, null=True, blank=True,validators=[MinValueValidator(0)])
    local_sym_kahesh_vazn = models.BooleanField(default=False)
    local_sym_kahesh_eshteha = models.BooleanField(default=False)
    local_sym_khastegi = models.BooleanField(default=False)
    local_sym_ekhtelal_dar_khab = models.BooleanField(default=False)
    local_sym_tarigh = models.BooleanField(default=False)
    local_sym_adam_tahamol = models.BooleanField(default=False)
    local_sym_tab = models.BooleanField(default=False)
    local_sym_other = models.BooleanField(default=False)
    local_sym_without_sign = models.BooleanField(default=False)
    local_sign_zaheri = models.BooleanField(default=False)
    local_sign_rang_paride = models.BooleanField(default=False)
    local_sign_other = models.BooleanField(default=False)
    local_sign_without_sign = models.BooleanField(default=False)
    local_des = models.CharField(max_length=50, null=True, blank=True)
    
    eye_sym_kahesh_binayi = models.BooleanField(default=False)
    eye_sym_tari_did = models.BooleanField(default=False)
    eye_sym_khastegi = models.BooleanField(default=False)
    eye_sym_dobini = models.BooleanField(default=False)
    eye_sym_sozesh = models.BooleanField(default=False)
    eye_sym_tars_az_nor = models.BooleanField(default=False)
    eye_sym_ashk = models.BooleanField(default=False)
    eye_sym_other = models.BooleanField(default=False)
    eye_sym_without_sign = models.BooleanField(default=False)
    eye_sign_reflex = models.BooleanField(default=False)
    eye_sign_red = models.BooleanField(default=False)
    eye_sign_sklrai = models.BooleanField(default=False)
    eye_sign_nistagemos = models.BooleanField(default=False)
    eye_sign_other = models.BooleanField(default=False)
    eye_sign_without_sign = models.BooleanField(default=False)
    eye_des = models.CharField(max_length=50, null=True, blank=True)

    skin_sym_kharesh_post = models.BooleanField(default=False)
    skin_sym_rizesh_mo = models.BooleanField(default=False)
    skin_sym_red = models.BooleanField(default=False)
    skin_sym_taghir_post = models.BooleanField(default=False)
    skin_sym_zakhm = models.BooleanField(default=False)
    skin_sym_poste_rizi = models.BooleanField(default=False)
    skin_sym_taghir_nakhon = models.BooleanField(default=False)
    skin_sym_other = models.BooleanField(default=False)
    skin_sym_without_sign = models.BooleanField(default=False)
    skin_sign_makol = models.BooleanField(default=False)
    skin_sign_papol = models.BooleanField(default=False)
    skin_sign_nadol = models.BooleanField(default=False)
    skin_sign_vezikol = models.BooleanField(default=False)
    skin_sign_zakhm = models.BooleanField(default=False)
    skin_sign_kahir = models.BooleanField(default=False)
    skin_sign_klabing = models.BooleanField(default=False)
    skin_sign_rizesh_mantaghe = models.BooleanField(default=False)
    skin_sign_rizesh_general = models.BooleanField(default=False)
    skin_sign_taghirat_peygmani = models.BooleanField(default=False)
    skin_sign_other = models.BooleanField(default=False)
    skin_sign_without_sign = models.BooleanField(default=False)
    skin_des = models.CharField(max_length=50, null=True, blank=True)

    gosh_sym_kahesh_shenavaii = models.BooleanField(default=False)
    gosh_sym_vez_vez_gosh = models.BooleanField(default=False)
    gosh_sym_sargije = models.BooleanField(default=False)
    gosh_sym_dard_gosh = models.BooleanField(default=False)
    gosh_sym_tarashoh_gosh = models.BooleanField(default=False)
    gosh_sym_gereftegi_seda = models.BooleanField(default=False)
    gosh_sym_galodard = models.BooleanField(default=False)
    gosh_sym_abrrizesh_bini = models.BooleanField(default=False)
    gosh_sym_ekhtelal_boyayi = models.BooleanField(default=False)
    gosh_sym_khareshvsozesh = models.BooleanField(default=False)
    gosh_sym_khonrizi = models.BooleanField(default=False)
    gosh_sym_khoshki = models.BooleanField(default=False)
    gosh_sym_ehsas = models.BooleanField(default=False)
    gosh_sym_other = models.BooleanField(default=False)
    gosh_sym_without_sign = models.BooleanField(default=False)
    gosh_sign_eltehab_parde = models.BooleanField(default=False)
    gosh_sign_paregi = models.BooleanField(default=False)
    gosh_sign_afzayesh = models.BooleanField(default=False)
    gosh_sign_tarashoh = models.BooleanField(default=False)
    gosh_sign_egzodai = models.BooleanField(default=False)
    gosh_sign_red = models.BooleanField(default=False)
    gosh_sign_polip = models.BooleanField(default=False)
    gosh_sign_tndrs = models.BooleanField(default=False)
    gosh_sign_lead = models.BooleanField(default=False)
    gosh_sign_bad_smell = models.BooleanField(default=False)
    gosh_sign_eltehab_lase = models.BooleanField(default=False)
    gosh_sign_zakhm = models.BooleanField(default=False)
    gosh_sign_other = models.BooleanField(default=False)
    gosh_sign_without_sign = models.BooleanField(default=False)
    gosh_des = models.CharField(max_length=50, null=True, blank=True)

    sar_sym_dard_gardan = models.BooleanField(default=False)
    sar_sym_tode_gardani = models.BooleanField(default=False)
    sar_sym_other = models.BooleanField(default=False)
    sar_sym_without_sign = models.BooleanField(default=False)
    sar_sign_bozorgi_tiroid = models.BooleanField(default=False)
    sar_sign_gardani = models.BooleanField(default=False)
    sar_sign_other = models.BooleanField(default=False)
    sar_sign_without_sign = models.BooleanField(default=False)
    sar_des = models.CharField(max_length=50, null=True, blank=True)

    rie_sym_sorfe = models.BooleanField(default=False)
    rie_sym_khelt = models.BooleanField(default=False)
    rie_sym_tangi = models.BooleanField(default=False)
    rie_sym_sine = models.BooleanField(default=False)
    rie_sym_other = models.BooleanField(default=False)
    rie_sym_without_sign = models.BooleanField(default=False)
    rie_sign_zaheri = models.BooleanField(default=False)
    rie_sign_khoshonat = models.BooleanField(default=False)
    rie_sign_vizing = models.BooleanField(default=False)
    rie_sign_cracel = models.BooleanField(default=False)
    rie_sign_taki_pene = models.BooleanField(default=False)
    rie_sign_kahesh_sedaha = models.BooleanField(default=False)
    rie_sign_other = models.BooleanField(default=False)
    rie_sign_without_sign = models.BooleanField(default=False)
    rie_des = models.CharField(max_length=50, null=True, blank=True)

    ghalb_sym_dard = models.BooleanField(default=False)
    ghalb_sym_tapesh = models.BooleanField(default=False)
    ghalb_sym_tangi_shabane = models.BooleanField(default=False)
    ghalb_sym_tangi_khabide = models.BooleanField(default=False)
    ghalb_sym_sianoz = models.BooleanField(default=False)
    ghalb_sym_senkop = models.BooleanField(default=False)
    ghalb_sym_other = models.BooleanField(default=False)
    ghalb_sym_without_sign = models.BooleanField(default=False)
    ghalb_sign_s = models.BooleanField(default=False)
    ghalb_sign_seda_ezafe = models.BooleanField(default=False)
    ghalb_sign_aritmi = models.BooleanField(default=False)
    ghalb_sign_varis_tahtani = models.BooleanField(default=False)
    ghalb_sign_varis_foghani = models.BooleanField(default=False)
    ghalb_sign_andam = models.BooleanField(default=False)
    ghalb_sign_other = models.BooleanField(default=False)
    ghalb_sign_without_sign = models.BooleanField(default=False)
    ghalb_des = models.CharField(max_length=50, null=True, blank=True)

    shekam_sym_bi_eshteha = models.BooleanField(default=False)
    shekam_sym_tahavo = models.BooleanField(default=False)
    shekam_sym_estefragh = models.BooleanField(default=False)
    shekam_sym_dard_shekam = models.BooleanField(default=False)
    shekam_sym_soozesh = models.BooleanField(default=False)
    shekam_sym_eshal = models.BooleanField(default=False)
    shekam_sym_yobosat = models.BooleanField(default=False)
    shekam_sym_ghiri = models.BooleanField(default=False)
    shekam_sym_roshan = models.BooleanField(default=False)
    shekam_sym_ekhtelal = models.BooleanField(default=False)
    shekam_sym_other = models.BooleanField(default=False)
    shekam_sym_without_sign = models.BooleanField(default=False)
    shekam_sign_shekami = models.BooleanField(default=False)
    shekam_sign_rebond = models.BooleanField(default=False)
    shekam_sign_hepatomegaly = models.BooleanField(default=False)
    shekam_sign_espelnomegali = models.BooleanField(default=False)
    shekam_sign_asib = models.BooleanField(default=False)
    shekam_sign_tode_shekami = models.BooleanField(default=False)
    shekam_sign_distansion = models.BooleanField(default=False)
    shekam_sign_other = models.BooleanField(default=False)
    shekam_sign_without_sign = models.BooleanField(default=False)
    shekam_des = models.CharField(max_length=50, null=True, blank=True)

    colie_sym_soozesh = models.BooleanField(default=False)
    colie_sym_tekrar = models.BooleanField(default=False)
    colie_sym_khoni = models.BooleanField(default=False)
    colie_sym_pahlo = models.BooleanField(default=False)
    colie_sym_sangini = models.BooleanField(default=False)
    colie_sym_other = models.BooleanField(default=False)
    colie_sym_without_sign = models.BooleanField(default=False)
    colie_sign_cva = models.BooleanField(default=False)
    colie_sign_varikosel = models.BooleanField(default=False)
    colie_sign_other = models.BooleanField(default=False)
    colie_sign_without_sign = models.BooleanField(default=False)
    colie_des = models.CharField(max_length=50, null=True, blank=True)

    eskelety_sym_mafsal = models.BooleanField(default=False)
    eskelety_sym_kamar_dard = models.BooleanField(default=False)
    eskelety_sym_zano = models.BooleanField(default=False)
    eskelety_sym_shane = models.BooleanField(default=False)
    eskelety_sym_other_mafasel = models.BooleanField(default=False)
    eskelety_sym_other = models.BooleanField(default=False)
    eskelety_sym_without_sign = models.BooleanField(default=False)
    eskelety_sign_mahdodiat = models.BooleanField(default=False)
    eskelety_sign_kahesh_foghani = models.BooleanField(default=False)
    eskelety_sign_kahesh_tahtani = models.BooleanField(default=False)
    eskelety_sign_eskolioz = models.BooleanField(default=False)
    eskelety_sign_empotasion = models.BooleanField(default=False)
    eskelety_sign_slr = models.BooleanField(default=False)
    eskelety_sign_r_slr = models.BooleanField(default=False)
    eskelety_sign_other = models.BooleanField(default=False)
    eskelety_sign_without_sign = models.BooleanField(default=False)
    eskelety_des = models.CharField(max_length=50, null=True, blank=True)

    asabi_sym_sar_dard = models.BooleanField(default=False)
    asabi_sym_giji = models.BooleanField(default=False)
    asabi_sym_larzesh = models.BooleanField(default=False)
    asabi_sym_ekhtelal = models.BooleanField(default=False)
    asabi_sym_tashanoj = models.BooleanField(default=False)
    asabi_sym_gez_gez = models.BooleanField(default=False)
    asabi_sym_other = models.BooleanField(default=False)
    asabi_sym_without_sign = models.BooleanField(default=False)
    asabi_sign_tabi_e = models.BooleanField(default=False)
    asabi_sign_gheir_tabi_e = models.BooleanField(default=False)
    asabi_sign_mokhtal = models.BooleanField(default=False)
    asabi_sign_trmor = models.BooleanField(default=False)
    asabi_sign_hesi = models.BooleanField(default=False)
    asabi_sign_tinel = models.BooleanField(default=False)
    asabi_sign_falen = models.BooleanField(default=False)
    asabi_sign_other = models.BooleanField(default=False)
    asabi_sign_without_sign = models.BooleanField(default=False)
    asabi_des = models.CharField(max_length=50, null=True, blank=True)

    ravan_sym_asabaniat = models.BooleanField(default=False)
    ravan_sym_parkhashgari = models.BooleanField(default=False)
    ravan_sym_ezterab = models.BooleanField(default=False)
    ravan_sym_kholgh = models.BooleanField(default=False)
    ravan_sym_angize = models.BooleanField(default=False)
    ravan_sym_other = models.BooleanField(default=False)
    ravan_sym_without_sign = models.BooleanField(default=False)
    ravan_sign_hazyan = models.BooleanField(default=False)
    ravan_sign_tavahom = models.BooleanField(default=False)
    ravan_sign_oriantasion = models.BooleanField(default=False)
    ravan_sign_other = models.BooleanField(default=False)
    ravan_sign_without_sign = models.BooleanField(default=False)
    ravan_des = models.CharField(max_length=50, null=True, blank=True)

    other = models.CharField(max_length=50, null=True, blank=True)
    CODE_CHOICES = [(1, '1'), (2, '2'), (3, '3')]
    code = models.IntegerField(default=1, choices=CODE_CHOICES, null=True, blank=True)

class Experiments_Model(models.Model):
    date_year=models.IntegerField(default=0, null=True, blank=True)
    date_month=models.IntegerField(default=0, null=True, blank=True)
    date_day=models.IntegerField(default=0, null=True, blank=True)
    cbc_wbc=models.IntegerField(default=0, null=True, blank=True)
    cbc_rbc=models.IntegerField(default=0, null=True, blank=True)
    cbc_hb=models.IntegerField(default=0, null=True, blank=True)
    cbc_htc=models.IntegerField(default=0, null=True, blank=True)
    cbc_plt=models.IntegerField(default=0, null=True, blank=True)
    ua_prot=models.IntegerField(default=0, null=True, blank=True)
    ua_glu=models.IntegerField(default=0, null=True, blank=True)
    ua_rbc=models.IntegerField(default=0, null=True, blank=True)
    ua_wbc=models.IntegerField(default=0, null=True, blank=True)
    ua_bact=models.IntegerField(default=0, null=True, blank=True)
    fbs=models.IntegerField(default=0, null=True, blank=True)
    chol=models.IntegerField(default=0, null=True, blank=True)
    ldl=models.IntegerField(default=0, null=True, blank=True)
    hdl=models.IntegerField(default=0, null=True, blank=True)
    tg=models.IntegerField(default=0, null=True, blank=True)
    bun=models.IntegerField(default=0, null=True, blank=True)
    cr=models.IntegerField(default=0, null=True, blank=True)
    alt=models.IntegerField(default=0, null=True, blank=True)
    ast=models.IntegerField(default=0, null=True, blank=True)
    alk=models.IntegerField(default=0, null=True, blank=True)
    hbs=models.IntegerField(default=0, null=True, blank=True)
    se=models.IntegerField(default=0, null=True, blank=True)
    ppd=models.IntegerField(default=0, null=True, blank=True)
    first_type= models.CharField(max_length=50, null=True, blank=True)
    first_result= models.CharField(max_length=50, null=True, blank=True)
    first_date_year=models.IntegerField(default=0, null=True, blank=True)
    first_date_month=models.IntegerField(default=0, null=True, blank=True)
    first_date_day=models.IntegerField(default=0, null=True, blank=True)
    second_type= models.CharField(max_length=50, null=True, blank=True)
    second_result= models.CharField(max_length=50, null=True, blank=True)
    second_date_year=models.IntegerField(default=0, null=True, blank=True)
    second_date_month=models.IntegerField(default=0, null=True, blank=True)
    second_date_day=models.IntegerField(default=0, null=True, blank=True)
    third_type= models.CharField(max_length=50, null=True, blank=True)
    third_result= models.CharField(max_length=50, null=True, blank=True)
    third_date_year=models.IntegerField(default=0, null=True, blank=True)
    third_date_month=models.IntegerField(default=0, null=True, blank=True)
    third_date_day=models.IntegerField(default=0, null=True, blank=True)


class Para_Clinic_Model(models.Model):
    opto_date_year=models.IntegerField(default=0, null=True, blank=True)
    opto_hedat_r_ba=models.IntegerField(default=0, null=True, blank=True)
    opto_hedat_r_bi=models.IntegerField(default=0, null=True, blank=True)
    opto_hedat_l_ba=models.IntegerField(default=0, null=True, blank=True)
    opto_hedat_l_bi=models.IntegerField(default=0, null=True, blank=True)
    opto_rangi_hedat_r_ba=models.IntegerField(default=0, null=True, blank=True)
    opto_rangi_hedat_r_bi=models.IntegerField(default=0, null=True, blank=True)
    opto_rangi_hedat_l_ba=models.IntegerField(default=0, null=True, blank=True)
    opto_rangi_hedat_l_bi=models.IntegerField(default=0, null=True, blank=True)
    opto_meidan_hedat_r_ba=models.IntegerField(default=0, null=True, blank=True)
    opto_meidan_hedat_r_bi=models.IntegerField(default=0, null=True, blank=True)
    opto_meidan_hedat_l_ba=models.IntegerField(default=0, null=True, blank=True)
    opto_meidan_hedat_l_bi=models.IntegerField(default=0, null=True, blank=True)
    opto_omgh = models.IntegerField(default=0, null=True, blank=True)

    audio_date_year=models.IntegerField(default=0, null=True, blank=True)
    audio_date_month=models.IntegerField(default=0, null=True, blank=True)
    audio_date_day=models.IntegerField(default=0, null=True, blank=True)
    oudio_tafsir = models.CharField(max_length=50, null=True, blank=True)
    audio_r_eight_ac = models.IntegerField(default=0, null=True, blank=True)
    audio_r_eight_bc = models.IntegerField(default=0, null=True, blank=True)
    audio_r_six_ac = models.IntegerField(default=0, null=True, blank=True)
    audio_r_six_bc = models.IntegerField(default=0, null=True, blank=True)
    audio_r_four_ac = models.IntegerField(default=0, null=True, blank=True)
    audio_r_four_bc = models.IntegerField(default=0, null=True, blank=True)
    audio_r_two_ac = models.IntegerField(default=0, null=True, blank=True)
    audio_r_two_bc = models.IntegerField(default=0, null=True, blank=True)
    audio_r_one_ac = models.IntegerField(default=0, null=True, blank=True)
    audio_r_one_bc = models.IntegerField(default=0, null=True, blank=True)
    audio_r_five_ac = models.IntegerField(default=0, null=True, blank=True)
    audio_r_five_bc = models.IntegerField(default=0, null=True, blank=True)
    audio_l_eight_ac = models.IntegerField(default=0, null=True, blank=True)
    audio_l_eight_bc = models.IntegerField(default=0, null=True, blank=True)
    audio_l_six_ac = models.IntegerField(default=0, null=True, blank=True)
    audio_l_six_bc = models.IntegerField(default=0, null=True, blank=True)
    audio_l_four_ac = models.IntegerField(default=0, null=True, blank=True)
    audio_l_four_bc = models.IntegerField(default=0, null=True, blank=True)
    audio_l_two_ac = models.IntegerField(default=0, null=True, blank=True)
    audio_l_two_bc = models.IntegerField(default=0, null=True, blank=True)
    audio_l_one_ac = models.IntegerField(default=0, null=True, blank=True)
    audio_l_one_bc = models.IntegerField(default=0, null=True, blank=True)
    audio_l_five_ac = models.IntegerField(default=0, null=True, blank=True)
    audio_l_five_bc = models.IntegerField(default=0, null=True, blank=True)

    espiro_date_year=models.IntegerField(default=0, null=True, blank=True)
    espiro_date_month=models.IntegerField(default=0, null=True, blank=True)
    espiro_date_day=models.IntegerField(default=0, null=True, blank=True)
    espiro_fevvfvc = models.CharField(max_length=50, null=True, blank=True)
    espiro_fev = models.CharField(max_length=50, null=True, blank=True)
    espiro_fvc = models.CharField(max_length=50, null=True, blank=True)
    espiro_vext = models.CharField(max_length=50, null=True, blank=True)
    espiro_pef = models.CharField(max_length=50, null=True, blank=True)
    espiro_fef = models.CharField(max_length=50, null=True, blank=True)
    espiro_tafsir = models.CharField(max_length=50, null=True, blank=True)

    other_cxr = models.CharField(max_length=50, null=True, blank=True)
    other_cxr_year=models.IntegerField(default=0, null=True, blank=True)
    other_cxr_month=models.IntegerField(default=0, null=True, blank=True)
    other_cxr_day=models.IntegerField(default=0, null=True, blank=True)
    other_ecg = models.CharField(max_length=50, null=True, blank=True)
    other_ecg_year=models.IntegerField(default=0, null=True, blank=True)
    other_ecg_month=models.IntegerField(default=0, null=True, blank=True)
    other_ecg_day=models.IntegerField(default=0, null=True, blank=True)
    other_result = models.CharField(max_length=50, null=True, blank=True)


class Consulting_Model(models.Model):
    first_year=models.IntegerField(default=0, null=True, blank=True)
    first_month=models.IntegerField(default=0, null=True, blank=True)
    first_day=models.IntegerField(default=0, null=True, blank=True)
    first_reason = models.CharField(max_length=50, null=True, blank=True)
    first_type = models.CharField(max_length=50, null=True, blank=True)
    first_result = models.CharField(max_length=50, null=True, blank=True)
    second_year=models.IntegerField(default=0, null=True, blank=True)
    second_month=models.IntegerField(default=0, null=True, blank=True)
    second_day=models.IntegerField(default=0, null=True, blank=True)
    second_reason = models.CharField(max_length=50, null=True, blank=True)
    second_type = models.CharField(max_length=50, null=True, blank=True)
    second_result = models.CharField(max_length=50, null=True, blank=True)


class Final_Theory_Model(models.Model):
    belamane = models.BooleanField(default=False)
    mashrot = models.BooleanField(default=False)
    mashrot_reason = models.CharField(max_length=50, null=True, blank=True)
    rad = models.BooleanField(default=False)
    rad_reason = models.CharField(max_length=50, null=True, blank=True)
    recommendations = models.CharField(max_length=50, null=True, blank=True)
    reason = models.CharField(max_length=50, null=True, blank=True)

class Summary_Of_Results(models.Model):
    examination = models.ForeignKey(Examinations_Model, on_delete=models.CASCADE,default=0)
    species = models.ForeignKey(Personal_Species_Model, on_delete=models.CASCADE,default=0)
